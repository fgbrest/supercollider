s.boot
MIDIClient.init;
m = MIDIOut.new (2);

TempoClock.default.tempo = 70/60;

(
~uno = Pbind(
    \instrument, \bpfsaw,
	\midinote, ~midinote01,
	\dur,~dur01,
	\sus, ~sus,
	\rel, ~rel,
	\atk,~atk,
	\detune, ~detune,
	\cfmin,~cfmin,
	\amp, ~amp01
).play;

~dos = Pbind(
    \instrument, \sinfb,
	\midinote, ~midinote02,
	\rel, 1/10,
	\dur,~dur02,
	\amp, ~amp02
).play;
)


// ARMAR
(
~sus = PatternProxy (1);
~rel = PatternProxy (1);
~atk = PatternProxy (0.5);
~detune = PatternProxy (0.1);
~cfmin = PatternProxy (200);
~midinote01 = PatternProxy (69);
~dur01 = PatternProxy(Pseq([0.5,0.5,1, 0.25, 0.25, 0.25, 0.25],inf));
~amp01 = PatternProxy(Pexprand(50,90,inf)/127);
~midinote02 = PatternProxy (73);
~dur02 = PatternProxy(Pseq([0.5,0.5,1, 0.25, 0.25, 0.25, 0.25],inf));
~amp02 = PatternProxy(Pexprand(50,90,inf)/127);
)


// TABLAS

// Pitch
(
p =[65, 65, 47, 66, 66, 64, 54, 47, 66, 64, 54, 59, 54, 59, 59, 66,
	54, 62, 59, 68, 64, 62, 64, 62, 68, 71,	59, 62, 56, 59, 76, 71,
	54, 56, 76, 52, 54, 52, 68,	49, 66, 68,	56, 49, 68, 66, 56, 61,
	61, 56, 68, 61, 56, 64, 61, 64, 54, 70,	68, 70, 61, 54, 70, 68,
	61, 66, 70, 66, 61, 66, 61, 70,	66, 70, 52, 71, 69, 71, 59, 71,
	69, 52,	64, 59, 64, 59, 64, 71, 67, 59, 64, 67, 57, 73, 71, 73,
	64,	57, 73, 71, 64, 69, 69, 64, 73, 69, 73, 69, 73, 64, 62, 78,
	76,	78, 66, 78, 76, 69, 78, 71, 69, 62, 66, 74, 71, 76, 74, 76,
	60, 78, 78, 76,	64, 76, 78, 78, 67, 69, 72, 60, 64, 69, 67,	76,
	72, 76, 59, 78, 78, 76, 63, 76, 78, 78, 66, 71, 66, 63, 71, 59,
	73, 75, 73, 75, 57, 78, 79,	78, 63, 78, 79, 78, 66, 71, 66, 63,
	73, 57, 71, 75, 73, 75, 55, 83, 74, 81, 83, 74, 59, 83, 81, 83,
	62,	67, 69, 67, 59, 62, 55, 71, 69, 71,	53, 83, 74, 81, 83, 59,
	83,	81, 74, 62, 83, 67, 69, 67, 62, 59, 53, 71, 69, 71, 52, 83,
	76, 81, 83, 56, 83, 76, 81, 83, 59, 64, 68, 64, 52, 59, 56, 71,
	68, 71, 50,	83, 76, 83, 84, 56, 83, 76, 84, 83, 59, 64, 68, 59,
	56, 64, 50, 68, 71, 71,	33, 83, 79, 76, 86, 36,	83, 83, 86, 79,
	40, 76, 36, 83, 33, 43, 40, 43, 47,	50, 47, 50, 45, 48, 52, 55,
	45, 48, 52, 59, 55, 62, 59, 62, 57, 60, 64, 57,	60, 67, 64, 71,
	67, 74, 71, 74, 69, 72, 76, 79, 69, 72, 76, 83, 79, 86, 83,	86,
	90, 93, 96, 93, 100, 90, 96, 103, 100,100,103, 98, 100, 91, 81,
	100,98, 96, 91, 100, 96, 88, 95, 95, 96, 88, 93, 96,81, 91, 93,
	84, 91, 84, 93,	90, 93, 90, 88, 81, 81, 88, 90, 86, 90, 86, 84,
	79, 69, 84, 86, 86, 79, 83,	83, 81, 76, 81, 76, 83, 83, 79, 69,
	78, 72, 79, 72, 78, 79, 79, 76, 76, 74,	69, 69, 74, 76, 72, 76,
	67, 72, 71, 57, 71, 72, 67, 69, 72, 69, 67, 64, 64,	67, 69, 66,
	69, 66, 57, 64, 60, 60, 66, 64, 66, 62, 62, 55, 60, 45, 60, 62,
	59, 62, 55, 59, 57, 52, 57, 59, 52, 55, 59, 55, 54, 47, 45, 54,
	55, 50, 55, 47, 40, 50, 55, 64, 62, 64, 55, 62, 57, 55, 55, 47,
	59, 57, 40, 62, 59, 62, 66, 47, 55, 66, 64, 62, 55, 64, 57, 62,
	47, 57, 59, 47, 62, 59, 62, 66, 66, 45, 64, 59, 60, 64, 66, 59,
	45, 57, 60, 64, 66, 62, 57, 64, 52, 64, 62, 54, 52, 57, 64, 54,
	62, 57, 62, 45, 64, 60, 59, 66, 64, 59, 45, 60, 64, 66, 57, 62,
	57, 64, 52, 64, 62, 54, 52, 64, 57, 54, 57, 62, 62, 40, 64, 55,
	62, 64, 55, 62, 57, 40, 47, 57, 59, 62, 59, 66, 62, 47, 55, 66,
	64, 55, 62, 64, 62, 57, 57, 47, 59, 47, 62, 59, 62, 66, 66, 45,
	64, 59, 60, 64, 66, 59, 45, 64, 66, 57, 60, 62, 57, 64, 52, 64,
	62, 54, 64, 52, 57, 54, 62, 57, 62, 45, 43, 64, 59, 60, 43, 66,
	64, 45, 59, 64, 66, 57, 60, 62, 64, 57, 52, 64, 62, 54, 57, 64,
	52, 62, 57, 54, 62, 64, 55, 40, 62, 64, 55, 62, 57, 40, 47, 57,
	59, 59, 62, 62, 66, 47, 66, 55, 64, 55, 64, 67, 69, 67, 69, 59,
	71, 74, 71, 74, 78, 78, 67, 76, 67, 74, 76, 59, 69, 74, 69, 71,
	69, 71, 62, 69, 62, 64, 62, 64, 62, 57, 57, 59, 57, 59, 50, 57,
	50, 52, 50, 52, 50, 45, 45, 47, 45, 47, 38, 45, 38, 40, 40, 38,
	38, 33, 33, 35, 33, 35, 33, 26, 26, 28, 31, 33, 35, 38, 28, 31,
	33, 35, 38, 40, 40, 43, 45, 47, 43, 50, 45, 52, 47, 50, 55, 57,
	59, 52, 62, 55, 57, 59, 62, 64, 67, 64, 69, 71, 74, 67, 69, 71,
	76, 74, 79, 81, 83, 76, 86, 81, 79, 83, 76, 88, 83, 79, 86, 86,
	76, 83, 88, 79, 90, 86, 83, 90, 76, 79, 88, 86, 83, 79, 76, 90,
	88, 90, 86, 88, 83, 79, 76, 76, 86, 79, 90, 83, 88, 88, 90, 86,
	83, 79, 76, 90, 76, 88, 79, 86, 83, 88, 90, 83, 79, 86, 76, 90,
	88, 76, 79, 86, 83, 88, 90, 83, 79, 90, 86, 76, 88, 76, 79, 86,
	88, 83, 90, 83, 90, 79, 86, 76, 88, 76, 79, 86, 88, 90, 83, 90,
	86, 83, 88, 86, 88, 90, 83, 90, 88, 83, 86, 79, 76, 88, 90, 86,
	79, 76, 83, 90, 88, 83, 86, 79, 76, 88, 90, 86, 76, 79, 83, 90,
	88, 83, 86, 76, 79, 88, 90, 79, 86, 76, 83, 90, 88, 83, 79, 86,
	76, 88, 90, 86, 79, 76, 83, 90, 88, 83, 86, 76, 79 ,88, 90, 86,
	76, 79, 90, 83, 88, 83, 88, 86, 90, 76, 79, 86, 76, 90, 79, 88,
	83, 88, 90, 86, 83, 76, 79, 90, 86, 88, 76, 79, 83, 88, 90, 86,
	83, 76, 90, 79, 88, 86, 76, 83, 88, 79, 90, 86, 90, 88, 83, 76,
	86, 88, 90, 76, 83, 90, 88, 86, 83, 76, 88, 90, 86, 83, 76, 90,
	88, 90, 88, 86, 83, 90, 88, 86, 83, 90, 88, 90, 88, 83, 79, 76,
	88, 90, 88, 83, 76, 86, 79]
)
// Velocity
(
v = [54,75,95,67,65,86,60,87,87,94,103,91,99,103,93,94,107,79,84,98,100,98,78,101,81,92,98,96,100,112,97,84,104,86,95,91,97,88,98,68,71,107,71,103,102,84,108,110,74,90,110,69,97,90,100,72,94,71,72,78,65,86,83,89,103,104,81,74,87,94,91,93,100,111,112,94,100,82,109,68,101,101,107,109,94,100,93,101,100,107,108,118,106,82,100,97,96,106,104,98,107,122,104,107,92,101,100,111,106,100,106,125,99,106,100,108,97,114,92,10,99,125,111,108,93,99,107,113,104,112,107,126,108,98,100,107,102,96,111,104,109,94,113,92,98,90,94,107,93,78,96,91,101,103,101,88,101,97,102,107,118,87,109,111,107,111,108,109,85,107,93,98,99,100,99,89,77,87,96,84,83,99,90,85,86,54,92,91,89,74,84,71,97,62,77,50,65,73,78,78,72,77,48,81,68,69,60,75,87,63,55,88,76,70,74,44,76,70,67,61,79,65,86,45,58,68,61,57,65,71,52,49,63,80,86,82,77,88,93,80,71,87,89,88,82,88,86,87,94,52,92,90,68,83,75,72,83,85,34,57,37,91,75,55,85,57,66,63,60,78,71,64,44,75,68,69,73,86,97,64,83,94,79,73,79,85,89,79,78,73,71,92,87,29,88,66,57,65,60,74,58,61,52,53,43,89,68,41,87,37,70,80,57,66,66,56,65,72,75,63,73,71,73,59,80,76,80,71,73,97,90,62,93,75,70,80,65,68,69,79,76,83,68,71,80,80,59,87,65,71,73,52,74,60,63,70,84,43,48,42,56,51,50,55,49,70,69,79,65,78,85,50,77,76,73,76,82,75,75,74,78,77,92,57,63,38,84,41,41,21,73,71,85,89,67,38,61,74,87,90,76,62,56,94,86,86,71,71,68,93,98,97,69,82,99,68,100,97,67,100,76,63,94,85,95,60,85,81,92,60,59,65,83,84,88,60,63,52,74,86,88,59,58,57,68,79,86,63,60,64,71,76,80,66,63,33,51,76,78,58,41,48,27,76,79,33,60,60,29,71,78,30,39,37,72,16,69,35,68,33,19,54,45,70,22,32,45,60,67,44,39,58,49,40,60,40,20,27,48]
)
/*
bpfsaw: an instrument by Eli Fieldsteel as part of his SuperCollider tutorial series
A detuned slow-enveloped saw wave which sounds lush and beautiful, especially with some extended chords
Has a lot of arguments,
atk = attack
sus = sustain
rel = release
ts = timescale of the envelope
c1 = start of envelope curve
c2 = end of envelope curve
freq = frequency
detune = detuning (multiple of frequency), works well with low values, higher ones get quite silly
pan = panning in stereo
cfhzmin = minimum modulation of filter frequency
cfhzmax = maximum modulation of filter frequency
cfmin = minimum filter frequency
cfmax = maximum filter frequency
rqmin = controls filter sweeping. Lower values = greater effects of filtering
rqmax = controls filter sweeping. Lower values = greater effects of filtering
lsf = frequency at which low shelf is activated
ldb = low shelf boost (in dB) - gets really glitchy over around 16 dB, but sounds great so I keep it high
amp = volume
out = channels out
*/

(
SynthDef(\bpfsaw, {
	arg atk=2, sus=0, rel=3, ts=1, c1=1, c2=(-1), freq=500, detune=0.02, pan=0, cfhzmin=0.1, cfhzmax=0.3, cfmin=500, cfmax=2000, rqmin=0.1, rqmax=0.2, lsf=200, ldb=0, amp=1, out=0;
	var sig, env;
	env = EnvGen.kr(Env([0,1,1,0],[atk,sus,rel],[c1,0,c2]),timeScale:ts,doneAction:2);
	sig = Saw.ar(freq*{LFNoise1.kr(0.5,detune).midiratio}!2);
	sig = BPF.ar(
		sig,
		{LFNoise1.kr(
			LFNoise1.kr(4).exprange(cfhzmin,cfhzmax)
		).exprange(cfmin,cfmax)}!2,
		{LFNoise1.kr(0.1).exprange(rqmin,rqmax)}!2
	);
	sig = BLowShelf.ar(sig,lsf,0.5,ldb);
	sig = Balance2.ar(sig[0],sig[1],pan);
	sig = sig*env*amp;
	Out.ar(out,sig);
}).add;
);

(
SynthDef(\sinfb, {
	arg freq = 440, atk = 0.01, sus = 0, rel = 1, fb = 0, amp = 0.3, out = 0, pan=0;
	var sig, env;
	env = EnvGen.ar(Env.linen(atk,sus,rel),1,1,0,1,2);
	sig = SinOscFB.ar(freq,fb,1);
	sig = sig*env;
	Out.ar(out,Pan2.ar(sig,pan,amp));
}).add;
);


~uno.play; ~dos.play;
~uno.stop; ~dos.stop;

// UNO----------------------------------------------------------------------
~sus.source = 1;
~sus.source = 0.1;

~rel.source = 1;
~rel.source = 0.5;

~atk.source = 0.5;
~atk.source = 0.1;

~detune.source = 2;
~detune.source = Pseq(v,inf)/100;
~detune.source = Pseq([0.1,0.1,0.9,0.1,0.1,1.9,5,0.1,0.2,0.1,9,0.1,0.2,0.3,0.4],inf);
~detune.source = Pseq([0.1,0.1,0.9,0.1,0.1,1.9,0.1,0.2,0.1,9,0.1,0.2,0.3,0.4],inf);

~cfmin.source = 200;
~cfmin.source = Pseq([200,2000,1500,1000,500,250,150,100,50],inf);
~cfmin.source = Pseq(p,inf)+100;

// MIDI
~midinote01.source = Pseq(p,inf)-12;
~midinote01.source = 49;

// RITMO
~dur01.source = 2
~dur01.source = Pbjorklund2(Pseq([3,8,2,5,9,10,14,3,5,5,4,9,14],inf),16)/8;


~dur01.source = 1/8;
~dur01.source = 1/10;
~dur01.source = 1/5;

~dur01.source = Pseq([1/8,1/8,1/8,1/8,1/4,1/4,1/2],inf);
~dur01.source = (Pseries(0.1,0.1,inf)); // rallentando

~dur01.source = (Pbrown(0.01,0.5,0.125,inf)); // erratic
~dur01.source = Pfsm([#[0,1,2],Pseq([1/8],8),#[1,2],Pseq([1/4],4),#[1,2],Pseq([1/5],5),#[0,2],#[1,1]]);


// DIN√ÅMICA
~amp01.source = Pexprand(50,90,inf)/127;
~amp01.source = Pseq([25,30,65,25,50],inf)/127;
~amp01.source = Pseq(v,inf)/127;

// CONTROLES
~uno.play;
~uno.stop;

// DOS----------------------------------------------------------------

// MIDI
~midinote02.source = Pseq(p,inf)+Pseq([5,5],inf);
~midinote02.source = Pclump(3,(Pseq(p,inf)+Pseq([5,5],inf)));


// RITMO
~dur02.source = 2
~dur02.source = Pbjorklund2(Pseq([3,8,2,5,9,10,14,3,5,5,4,9,14],inf),16)/8;


~dur02.source = 1/8;
~dur02.source = 1/10;
~dur02.source = 1/5;
~dur02.source = Pseq([1/8,1/8,1/8,1/8,1/4,1/4,1/2],inf);
~dur02.source = (Pseries(0.1,0.1,inf)); // rallentando
~dur02.source = (Pbrown(0.01,0.5,0.125,inf)); // erratic
~dur02.source = Pfsm([#[0,1,2],Pseq([1/8],8),#[1,2],Pseq([1/4],4),#[1,2],Pseq([1/5],5),#[0,2],#[1,1]]);


// DIN√ÅMICA
~amp02.source = Pexprand(50,90,inf)/127;
~amp02.source = Pseq([25,30,65,25,50],inf)/127;
~amp02.source = 30/127;

// CONTROLES
~dos.play;
~dos.stop;
